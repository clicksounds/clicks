name: Rename All Clicks and Deploy Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  rename:
    name: Rename and Deploy Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg

      - name: Install Packages
        run: |
          python -m pip install ffmpeg
          python -m pip install pydub

      - name: Run Sounds Copier
        run: python ./.github/CopySoundsForRename.py

      - name: Run File Namer
        run: cd .github/FileNamer; python main.py

      - name: Copy Output to the Original Folder
        run: python .github/CopySoundsForRenamePT2.py

      - name: Update Repository
        run: |
          git config user.name "Sounds Updater"
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Sounds (renames all multiple click files)" && git push || echo "Nothing to commit, there's no changes."

      - name: Get Click and Release files
        id: get-files
        run: |
          output="{\"e\": {"
          for dir in Meme/*/
          do
              dir=${dir%*/}; dir=${dir##*/}
              output="${output}, \"${dir}\": {\"c\": ["
              for file in Meme/$dir/Clicks/*; do
                  file=${file##*/}; [ "$file" != "*" ] && output="${output}, \"${file}\""
              done
              output="${output}], \"r\": ["
              for file in Meme/$dir/Releases/*; do
                  file=${file##*/}; [ "$file" != "*" ] && output="${output}, \"${file}\""
              done
              output="${output}]}"
          done
          for dir in Useful/*/
          do
              dir=${dir%*/}; dir=${dir##*/}
              output="${output}, \"${dir}\": {\"c\": ["
              for file in Useful/$dir/Clicks/*; do
                  file=${file##*/}; [ "$file" != "*" ] && output="${output}, \"${file}\""
              done
              output="${output}], \"r\": ["
              for file in Useful/$dir/Releases/*; do
                  file=${file##*/}; [ "$file" != "*" ] && output="${output}, \"${file}\""
              done
              output="${output}]}"
          done
          output="${output}}}"
          echo "$output" > .github/JsonCreator/all_files.json

      - name: Make folder for packs and pack info
        run: |
          mkdir info
          mkdir packs

      - name: Debug ALL_FILES Variable
        run: echo "${{ steps.get-files.outputs.files }}" | wc -c

      - name: Generate all_files.json
        run: python .github/JsonCreator/makeallfiles.py
      
      - name: Run json creator
        run: cd .github/JsonCreator/; python main.py
        
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Generate index_list.json
        run: |
          set -e
          echo "Generating index_list.json..."
          echo '{' > index_list.json
          echo '  "Meme": [' >> index_list.json

          for dir in Meme/*/
          do
              dir=${dir%*/}
              dir=${dir##*/}
              if [ -f "Meme/$dir/pack.json" ]; then
                  name=$(jq -r '.name' "Meme/$dir/pack.json")
                  id=$(jq -r '.id' "Meme/$dir/pack.json")
                  version=$(jq -r 'if has("version") then .version else 1 end' "Meme/$dir/pack.json")
                  echo "    {\"name\": \"$name\", \"id\": \"$id\", \"version\": $version, \"type\": \"Meme\", \"folders\": [" >> index_list.json
                  first=true
                  if [ -d "Meme/$dir/Clicks" ]; then
                      echo -n "        \"Clicks\"" >> index_list.json
                      first=false
                  fi
                  if [ -d "Meme/$dir/Releases" ]; then
                      if [ "$first" = false ]; then
                          echo -n ", " >> index_list.json
                      fi
                      echo -n "\"Releases\"" >> index_list.json
                  fi
                  echo "]}, " >> index_list.json
              else
                  echo "pack.json not found in Meme/$dir"
              fi
          done

          sed -i '$ s/, $//' index_list.json
          echo '  ],' >> index_list.json
          echo '  "Useful": [' >> index_list.json

          for dir in Useful/*/
          do
              dir=${dir%*/}
              dir=${dir##*/}
              if [ -f "Useful/$dir/pack.json" ]; then
                  name=$(jq -r '.name' "Useful/$dir/pack.json")
                  id=$(jq -r '.id' "Useful/$dir/pack.json")
                  version=$(jq -r 'if has("version") then .version else 1 end' "Useful/$dir/pack.json")
                  echo "    {\"name\": \"$name\", \"id\": \"$id\", \"version\": $version, \"type\": \"Useful\", \"folders\": [" >> index_list.json
                  first=true
                  if [ -d "Useful/$dir/Clicks" ]; then
                      echo -n "        \"Clicks\"" >> index_list.json
                      first=false
                  fi
                  if [ -d "Useful/$dir/Releases" ]; then
                      if [ "$first" = false ]; then
                          echo -n ", " >> index_list.json
                      fi
                      echo -n "\"Releases\"" >> index_list.json
                  fi
                  echo "]}, " >> index_list.json
              else
                  echo "pack.json not found in Useful/$dir"
              fi
          done

          sed -i '$ s/, $//' index_list.json
          echo '  ]' >> index_list.json
          echo '}' >> index_list.json


      - name: Commit Generated index_list.json
        run: |
          git config user.name "Clicksounds Site"
          git config user.email "actions@github.com"
          git add index_list.json
          git commit -m "Update index_list.json" && git push || echo "Nothing to commit, no changes to JSON."

      - name: Compress into .zip for GitHub Pages
        run: |
          for dir in Meme/*/
          do
              dir=${dir%*/}
              dir=${dir##*/}
              cd Meme/${dir}
              7z a -r -ssw ../packs${dir}.zip pack.json pack.png Clicks/ Releases/
              cd ../../
              python .github/JsonCreator/removedir.py Meme/${dir}
          done
          for dir in Useful/*/
          do
              dir=${dir%*/}
              dir=${dir##*/}
              cd Useful/${dir}
              7z a -r -ssw ../${dir}.zip pack.json pack.png Clicks/ Releases/
              cd ../../
              python .github/JsonCreator/removedir.py Useful/${dir}
          done
          python .github/JsonCreator/removegithubfolder.py

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
